### tmux config
# server opts
set -sg escape-time 0
set -sg repeat-time 0
set -sg default-terminal "screen-256color"
set -sg message-command-style "fg=magenta"
set -sg assume-paste-time 50  # if keys are entered faster than 50ms apart, don't process keybindings
set -sg lock-command cmatrix
set -sg status-keys vi

# window opts
set -wg pane-base-index 1
set -wg allow-rename on
set -wg automatic-rename on
set -wg aggressive-resize off
set -wg monitor-activity on
set -wg wrap-search on
set -wg clock-mode-style 24

# session opts
set -g base-index 1
set -g detach-on-destroy on
set -g mouse off
set -g status on
set -g remain-on-exit off
set -g visual-activity on
set -g set-titles on
set -g set-titles-string "#W [#S]: tmux on #H"
set -g renumber-windows on
set -g history-limit 1000000 # memory is cheap

# Prefix
set -g prefix C-s # I never use the terminal escape

# Session settings
bind-key R source-file ~/.tmux.conf ; display 'Reloaded'
bind-key S command-prompt -p 'History file:' -I '~/tmux-history.txt' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'
bind-key r command-prompt -p 'Session name:' 'rename-session %1'
bind-key n command-prompt -p 'New session name:' 'new-session -s %1'
bind-key w setw synchronize-panes

# remove old mappings
unbind-key ,
unbind-key h
unbind-key j
unbind-key k
unbind-key l
unbind-key Left
unbind-key Down
unbind-key Up
unbind-key Right

bind-key e copy-mode
bind-key / copy-mode
bind-key Tab next-window

# pane and window nav
bind-key , last-window
bind-key . switch-client -l # L
bind-key L switch-client -l # L
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# pane navigation within VIM
# This snippet copied from christoomey/vim-tmux-navigator README
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# These will allow movement within tmux panes using Ctrl+direction,
# but will not allow movement from a vim pane -> any other tmux pane.
# That must be accomplished with <Prefix>direction
# TODO write a really complicated thing to do that
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# resize
bind-key Left resizep -L 10
bind-key Right resizep -R 10
bind-key Up resizep -U 10
bind-key Down resizep -D 10
bind-key C-Left resizep -L 10
bind-key C-Right resizep -R 10
bind-key C-Up resizep -U 10
bind-key C-Down resizep -D 10

# Statusbar Settings
set -g status-fg default
set -g status-bg default

setw -g window-status-fg default
setw -g window-status-bg default
setw -g window-status-attr default
setw -g window-status-format '#[fg=default]#I #W#[default]'

setw -g window-status-current-fg default
setw -g window-status-current-bg default
setw -g window-status-current-attr default
setw -g window-status-current-format '#[bg=red,fg=white,bold] #I #[bg=default,fg=red] #W#[default,fg=red](#{pane_pid})#[default]'

setw -g window-status-activity-style fg=cyan,bg=default
setw -g window-status-bell-style fg=red,blink

set -g pane-border-bg default
set -g pane-border-fg red

set -g pane-active-border-bg default
set -g pane-active-border-fg black

set -g status-interval 15
set -g status-position bottom
set -g status-justify centre
set -g status-left-length 150
set -g status-right-length 150
set -g status-left "#H #[fg=green]#S >#[default]>#[fg=green]>"
set -g status-right '#[fg=magenta]<#[default]<#[fg=magenta]< #(bash ~/.tmux/status.sh mem)#[default] #[fg=magenta,bold]#(bash ~/.tmux/status.sh load)#[default,fg=white][#(bash ~/.tmux/status.sh cpu)#[fg=white]] #[fg=yellow]#(date +"%a, %b %d %R")'
