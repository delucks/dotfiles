#!/usr/bin/env bash

###########
# backlight
#
# This script changes the backlight of a monitor for a Linux laptop. It's designed for a minimal of UI to get useful things done quickly.
#
# Usage:
#   backlight max           Sets the monitor brightness to the highest value supported
#   backlight up            Increase monitor brightness by 5%
#   backlight down          Decrease monitor brightness by 5%
#   backlight N             Set monitor brightness to this integer value

# Look for a proper /sys control for us to use
OPTIONS=(/sys/class/backlight/acpi_video0 /sys/class/backlight/intel_backlight /sys/class/backlight/backlight.12)
for i in "${OPTIONS[@]}"
do
  if test -d "$i"; then
    SYS_DIR="$i"
  fi
done
if test -z "${SYS_DIR+x}"; then
  echo "No suitable brightness device found out of ${OPTIONS[*]}"
  return 1
fi

# Parse arguments
if [ $# -eq 0 ]; then
  # No args: show current brightness
  cat "$SYS_DIR/brightness"
else
  case "$1" in
    max)
      # UUOC to show the user the brightness while changing it
      cat "$SYS_DIR/max_brightness" | sudo tee "$SYS_DIR/brightness"
    ;;
    up|down)
      # Increase or decrease 5% at a time
      MAX=$(cat "$SYS_DIR/max_brightness")
      STEP=$((MAX / 20))
      CURRENT=$(cat "$SYS_DIR/brightness")
      if [ "$1" == "up" ]; then
        NEW=$((CURRENT + STEP))
      else
        NEW=$((CURRENT - STEP))
      fi
      if test "$NEW" -lt 0; then
        NEW=0
      fi
      if test "$NEW" -gt "$MAX"; then
        NEW=$MAX
      fi
      echo "${NEW}" | sudo tee "$SYS_DIR/brightness"
    ;;
    ''|*[!0-9]*)
      echo "Invalid input, $1"
      return 1
    ;;
    *)
      echo "${1}" | sudo tee "$SYS_DIR/brightness"
    ;;
  esac
fi
