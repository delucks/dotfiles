# cd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# vc
alias sup='svn update'
alias sch='svn checkout $@'
alias ss='svn status'
alias sadd='svn add $@'
alias scm='svn commit'
alias getget='git pull'
alias gita='git add'
alias gitd='git diff'
alias gitm='git mv'
alias gitr='git rm'
alias gitp='git push'
alias gitc='git commit'
alias gits='git status'

# ls
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  alias ls='ls --color=auto'
  alias la='ls -aChkopl --group-directories-first --color=auto'
  alias lsg='ls -aChkopl --group-directories-first --color=auto | grep "$@"'
elif [[ "$OSTYPE" == "darwin"* ]]; then
  alias ls='ls -G'
  alias la='ls -aChGkopl --group-directories-first'
  alias lsg='ls -aChGkopl --group-directories-first | grep "$@"'
else
  alias la='ls -aChkopl --group-directories-first'
  alias lsg='ls -aChkopl --group-directories-first | grep "$@"'
fi
alias sl='/usr/bin/sl'

# packages
alias y='yaourt'
alias orphan='pacman -Qtdq'
sizes() {
	awk 'BEGIN{while (("pacman -Qi" |getline) > 0){ if ($0 ~ /Name/) {name=$3};{if ($0 ~ /Size/) {size=$4/1024;print name": ",size,"Mb"|"sort -k2 -n|column -t"}}}}'
}
alias owner='pacman -Qo $(which $1)'

# beets
alias bim='beet im'
alias bls='beet ls'
alias brm='beet remove'
alias bvr='beet version'

# herbsluftwm helpers
alias hkeys="cat ~/.config/herbstluftwm/autostart| egrep '^([\t\ ])?hc keybind' | awk '{print \$3}'"
alias hmods="hkeys | grep mod | sed 's/\$mod\-//g' | sort"
alias currtag="herbstclient tag_status | sed -e 's/[:|\.][a-zA-Z]//g' -e 's/[\t\ #]//g'"

# docker
docker-remove() {
  sudo docker images | grep "$1" | awk '{print $3}' | xargs sudo docker rmi 2>&1 | awk '{print $12}' | uniq | xargs sudo docker rm
  sudo docker images | grep "$1" | awk '{print $3}' | xargs sudo docker rmi
}
alias daddr="sudo docker ps | tail -1 | awk '{print $1}' | xargs sudo docker inspect -f '{{.NetworkSettings}}' "

# networking
alias router="routel | egrep '^\ +default' | grep -v lo | awk '{print $2}'"
alias s='ssh'
alias lscan="sudo nmap -sn $(ip addr show | grep 'inet ' | grep global | awk '{print $2}') | grep -v -e Host\ is\ up -e done -e Starting"
alias ssh-hosts="grep 'Host\ ' ~/.ssh/config | awk '{print \$NF}'"
alias prdev="ip link show up | grep mtu | grep -v lo | awk -F':' '{print $2}' | tr -d ' '"
alias paddr="ip addr show primary dev $(ip link show up | grep mtu | grep -v lo | awk -F':' '{print $2}' | tr -d ' ') | grep inet\ | awk '{print $2}'"

# misc
alias ts='while read line; do date +"%F %T $line"; done'
alias ks='killall spotify'
alias fucking='sudo'
alias die='poweroff'
alias wvud='mplayer http://128.175.76.123:8000/WVUD-FM123.mp3'
alias cdiff='dwdiff --no-common -c'
alias big="echo $1 | figlet"
alias vc='vim -c ":RangerChooser"'
alias \:q='exit'
alias strings='strings -a'
alias whereami='uname -n'
alias d='date +%R'
alias ixit='curl -F "f:1=<-" ix.io'
alias hc='herbstclient'
alias violet='wmname LG3D && violet'
alias cman="$HOME/dev/colorman/cman.py"
alias archey='archey --config=~/.config/archey3.cfg'
alias memcheck='valgrind --tool=memcheck $@ --leak-check=full'
alias mfat='sudo mount -t vfat /dev/sdb1 /mnt/vfat'
alias webcam='fswebcam --no-banner --no-shadow --no-overlay -r 1000x1000 --save foo.png'
alias webcam='mplayer tv:// -tv driver=v4l2:width=640:height=480:device=/dev/video0 -fps 15 -vf screenshot'
alias manp='python2 manage.py'
alias wgot='wget -e robots=off -r -nc -np '
alias rot13='tr "a-zA-Z" "n-za-mN-ZA-M"'
alias iploc='curl ipinfo.io/$(dig $1 +short)'
alias mkdir='mkdir -p'
alias datehelp='for F in {a..z} {A..Z} :z ::z :::z;do echo $F: $(date +%$F);done|sed "/:[\ \t\n]*$/d;/%[a-zA-Z]/d"'
alias serve='python2 -m SimpleHTTPServer'
alias flvjoin='mencoder -forceidx -of lavf -oac pcm -ovc copy -o output.flv '
alias apropy="pydoc2 -k $1 2>/dev/null"

# network addresses
alias cal="chromium 'https://www.google.com/calendar/render'"

# functions 

rgrep() {
	if [ $# -lt 1 ];
	then
		echo "Required one argument"
		return 1
  fi
  grep -riI $1 .
}

rfind() {
	if [ $# -lt 1 ];
	then
		echo "Required one argument"
		return 1
  fi
  find . -name "*$1*"
}

vfind() {
	if [ $# -lt 1 ];
	then
		echo "Required one argument"
		return 1
  fi
  vim $(find . -type f -name "*$1*")
}

alias rf='rfind'
alias vf='vfind'

note() {
	if [ $# -lt 1 ];
	then
		echo "Required one argument, name of note"
		return 1
	fi
	FILE="$HOME/notes/$1.txt"
	if [ -f $FILE ];
	then
		echo "$FILE exists"
		vim "$FILE"
	else
		touch "$FILE"
		echo "$1" | figlet > "$FILE"
		echo "Note from $(date)" >> "$FILE"
		vim "$FILE"
	fi
}

ccd() {
	if [ $# -lt 2 ];
	then
		echo "Use: ccd {file} {dir}"
		return 1
	fi
	FILE="$1"
	if [ ! -f "$FILE" ];
	then
		echo "File not found"
		return 1
	fi
	DIR="$2"
	if [ ! -d "$DIR" ];
	then
		echo "Dir not found"
		return 1
	fi
	cp -r "$FILE" "$DIR"
	cd "$DIR"
	pwd
}

# Debian Specific
if [[ -f /etc/debian_version ]]; then
  alias packages="dpkg -l | awk '{$1=$3=$4=\",\"}1' | column -t -s,"
fi

regp() {
  if [ $# -lt 1 ];
  then
    echo "Use: regp {regex to apply}"
    return 1
  fi
  PREVCMD=$(fc -ln -1)
  REG=$1
  eval $(echo "$PREVCMD" | sed "s/$REG/g")
}

silent() {
  if [ $# -lt 1 ];
  then
    echo "silent() requires a command argument"
    return 1
  fi
  eval "$1 2>/dev/null 1>&2"
}

stdfile() {
  if [ $# -lt 1 ];
  then
    echo "stdfile() requires a command argument"
    return 1
  fi
  eval "$1 2>./stderr 1>./stdout"
}

source ~/.localaliasrc
