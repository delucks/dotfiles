*Crunch* An easier way to perform calculations inside Vim

*crunch* *crunch.txt* 
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
--------->                                                          <---------
--------->  ______   ______   __  __   __   __   ______   __  __    <---------
---------> /\  ___\ /\  == \ /\ \/\ \ /\ '-.\ \ /\  ___\ /\ \_\ \   <---------
---------> \ \ \____\ \  __< \ \ \_\ \\ \ \-.  \\ \ \____\ \  __ \  <---------
--------->  \ \_____\\ \_\ \_\\ \_____\\ \_\\"\_\\ \_____\\ \_\ \_\ <---------
--------->   \/_____/ \/_/ /_/ \/_____/ \/_/ \/_/ \/_____/ \/_/\/_/ <---------
--------->                                                          <---------
--------->                                                          <---------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------

        A Vim plugin that provides a calculator with variable support

==============================================================================


     1. Overview .................................... |crunch-overview|
         1.1 Looser Syntax .......................... |crunch-looser-syntax|
     2. Usage ....................................... |crunch-usage|
        2.1 Variables ............................... |crunch-variables|
        2.2 Comments ................................ |crunch-comment|
        2.3 Prefix & Suffix ......................... |crunch-prefix-suffix||
        2.4 Command Arguments ....................... |crunch-arguments|
     3. Mappings  ................................... |crunch-mappings|
     4. Configuration ............................... |crunch-configuration|
         4.1 g:crunch_calc_prompt ................... |crunch-calc-prompt|
         4.2 g:crunch_calc_comment .................. |crunch-calc-comment|
     5. Known Issues ................................ |crunch-known-issues|
     6. Contribute .................................. |crunch-contribute|
     7. Change Log .................................. |crunch-change-log|
         7.1 Todo ................................... |crunch-todo|
     8. Credits ..................................... |crunch-credits|
     9. License ..................................... |crunch-licenece|

==============================================================================
1. OVERVIEW                                                 *crunch-overview*

Crunch makes calculations in Vim more accessible and loosens Vim's math
syntax, allowing Implied multiplication. Crunch also forces floating point to
be used when evaluating.

Requirements: Vim compiled with |+float| feature.

If you want to do math in Vim without Crunch the process goes as follows.
From insert mode or command line more:
    <CTRL-R>=5+5<CR>

Or just from command line mode:
    :echo 5+5<CR>

One Problem with this method is when you expect a floating point result from
integer division:
                                     e.g.
                                   5/2 = 2

You can see that the result is the truncated version of the actual result.
When what you actually wanted was:

                                5.0/2.0 = 2.5

Or when you enter a floating point number like this:

                                     .5/2

A decimal without a leading zero produces an error when you actually wanted
was this 0.5/2 = 0.25

Crunch solves these trivial problems and many more.
------------------------------------------------------------------------------
1.1  LOOSER SYNTAX                                     *crunch-looser-syntax*

The following chart shows the looser math syntax provided with Crunch, compared 
to the default math syntax.

==============================================================================
         Feature           |      With Crunch      |      Without Crunch
==============================================================================
Implied Multiplication     |                       |
                           |cos(0)cos(0) = 1       |cos(0)*cos(0) = 1.0
                           |2sin(1) = 1.682942     |2*sin(1) = 1.682942
                           |sin(1)2 = 1.682942     |sin(1)*2 = 1.682942
                           |(2*3)(3*2) = 36        |(2*3)*(3*2) = 36
                           |2(3*2) = 12            |2*(3*2) = 12
 --------------------------+-----------------------+-------------------------
Integer to Float Conversion|                       |
                           |1/2 = 0.5              |1.0/2.0 = 0.5
                           |.25*4 = 1              |0.25*4 = 1.0
 --------------------------+-----------------------+-------------------------
Decimals w/o Leading Zeros |                       |
                           |.5/2 = 0.25            |0.5/2 = 0.25
                           |.25*4 = 1              |0.25*4 = 1.0
 --------------------------+-----------------------+-------------------------
Removed Zeros In Result    |                       |
                           |0.25*4 = 1             |0.25*4 = 1.0
                           |pow(2,8) = 256         |pow(2,8)= 256.0
 ----------------------------------------------------------------------------
Note: all the examples 'Without Crunch' work fine with Crunch as well.

Crunch Allows you to just type in mathematical expressions without having to
worry about the syntax as much, and getting the answer you expect.


==============================================================================
2. USAGE                                                       *crunch-usage*


*   :Crunch [expr]                                                  *:Crunch*

    Where [expr] is some mathematical expression to be evaluated. The result
    is then available to be pasted from the default register.

*  :Crunch

    Crunch then gives you the following prompt in the command line:
    Calc >>
    for you to enter you mathematical expression. The result is then available
    to be pasted from the default register.

*  :CrunchLine [args] [, :'<'>CrunchLine, or <leader>cl         *:CrunchLine*

    Crunch Uses the current line or the visually selected lines as the
    expression(s) and adds the result to the end of the line(s). When the
    expression(s) changes using :CrunchLine again will reevaluate the line(s)
    For information about [args] see |CrunchArguments|

*  :CrunchBlock [args], or <leader>cb                          :*CrunchBlock*

    Crunch Uses the current paragraph (block of text starting and ending with
    an empty line) as the expressions and adds the result to the end of the
    lines. When a expressions in a paragraph changes using :CrunchBlock again
    will reevaluate them. For information about [args] see |CrunchArguments|

------------------------------------------------------------------------------
2.1  VARIABLES                                             *crunch-variables*

When using |:CrunchLine| or |:CrunchBlock| (and their mappings) you can use
variables of a sort to define values and store results.

A variable name consists of ASCII letters, digits and the underscore. It
cannot start with a digit.  

Valid variable names:
  counter
  _aa3p
  very_long_variable_name_with_underscores
  FuncLength2
  LENGTH

Invalid names 
  foo+bar
  6var

------------------------------------------------------------------------------
Example: calculate area and volume given the radius.

radius = 5
pi = 3.1415
area = pow(radius,2)*pi
volume = pow(radius,3)*pi*4/3

First two lines work like constants denoting Pi and the radius.  You can then
visually select the next two lines and use either |:CrunchLine|, or <leader>cl
to evaluate the expressions and see the results.

area = pow(radius,2)*pi = 78.5375
volume = pow(radius,3)*pi*4/3 = 523.583333

If invalid expressions are used Crunch will report errors, and append that
error as a result.

------------------------------------------------------------------------------
2.2  COMMENTS                                                *crunch-comment*

If you don't want a line evaluated but want to leave some text there crunch
has support for ignoring lines with comments. By default the string to start a
comment it '"' just like Vim Script, but this can be configured
|g:crunch_calc_comment| global variable.

------------------------------------------------------------------------------
2.3  PREFIX & SUFFIX                                   *crunch-prefix-suffix*

The |:CrunchLine| and |:CrunchBlock| commands  automatically ignores certain
prefixes and suffixes in a line. There are currently two patterns that are
used as suffixes and prefixes in all file types '*' and '//' the third pattern
is varies by file type and is based of the '|commentstring|' variable in Vim.
Bellow is a table summarizing some prefixes for different file types.

==============================================
    File Type    |      Valid Expression
==============================================
 C               |/*
 Java            | * 5*5
 JavaScrip       | *
                 | */
                 |----------------------------
                 |/* 5*5
                 | */
                 |----------------------------
                 |//  5*5
                 |----------------------------
                 |/*5*5*/
                 |----------------------------
                 |/*  5*5   */
 ----------------+----------------------------
 HTML            |<!-- 5*5
                 |-->
                 |----------------------------
                 |<!--
                 |* 5*5
                 |-->
                 |----------------------------
                 |/*5*5*/
                 |----------------------------
                 |//5*5
 ----------------+----------------------------
 Python          |#5*5
                 |----------------------------
                 |#5*5#
                 |----------------------------
                 |// 5*5
                 |----------------------------
                 |* 5*5 */
 ----------------+----------------------------

If your language's commentstrig is unsupported by vim or you would like to use
a different comment string, don't worry. All you have to do is add an autocmd
to update commentstring for the desired language your vimrc.

e.g. adding support for apache file type.(spaces escaped)

autocmd FileType apache set commentstring=#\ %s

e.g. changing the commentstring for Python to use the multi-line version of a
comment

autocmd FileType python set commentstring='''%s'''

------------------------------------------------------------------------------
2.4  COMMAND  ARGUMENTS                            *crunch-command-arguments*

Currently there is only one argument for both the |:CrunchLine| and
|:CrunchBlock| commands. The argument is '-exclusive' or '-exc' for short.
this argument causes only the selected lines (or paragraph when using
|:CrunchBlock| to be considered when evaluating.

e.g.
|:CrunchLine| -exc
or
|:CrunchLine| -exclusive

==============================================================================
3. MAPPINGS                                                 *crunch-mappings*

By default CrunchLine is mapped to '<leader>cl'. To use a different map:

        map <silent> <leader>cr <plug>CrunchEvalLine

If you don't want this mapping to be loaded set

        map <silent> <plug>NoCrunchEvalLine <plug>CrunchEvalLine

To map the '-exclusive' version, use the following:

        map <silent> <leader>cl <plug>CrunchEvalLineExc
        map <silent> <leader>cr <plug>CrunchEvalBlockExc


==============================================================================
4. CONFIGURATION                                       *crunch-configuration*

------------------------------------------------------------------------------
4.1 g:crunch_calc_prompt                                 *crunch-calc-prompt*

Default 'Calc >> '

------------------------------------------------------------------------------
4.2 g:crunch_calc_comment                               *crunch-calc-comment*

Default '"'

==============================================================================
5. KNOWN ISSUES                                         *crunch-known-issues*

* Modulus operation is not supported due to converting all numbers into floats
* Expression similar to the following evaluate 23.43.22 + 0 = 23.43. This is
  caused by the way str2float() converts 23.34.22 into 23.34

==============================================================================
6. CONTRIBUTE                                             *crunch-contribute*

Repository and Bug Tracker:
https://github.com/arecarn/crunch

==============================================================================
7. CHANGE LOG                                             *crunch-change-log*

02 Oct  2013 * Prefix & Suffix Ignore added

12 Sept 2013 * Improved Variable Flexibility

29 Aug  2013 * Add CrunchBlock mapping

27 Aug  2013 * Allow expressions to be input as an argument to |:Crunch|
               command  e.g. '|:Crunch| 5*5'

08 July 2013 * Improved Map handling

07 July 2013 * Move most of plugin to autoload

04 July 2013 * Streamline code
             * Add more multiplication fixes
                - )(, n(
             * Added visual selection

27 Jun  2013 * Added Variables
             * Clearing of previous result
             * Made Crunch and CrunchLine two different functions
             * Removed visual selection in favor of whole line evaluation.
             * Made calculator prompt customizable

24 Jun  2013 added multiplication fix
19 Jun  2013 first version

------------------------------------------------------------------------------
7.1  TODO                                                       *crunch-todo*

http://github.com/arecarn/crunch/issues


==============================================================================
8. CREDITS                                                   *crunch-credits*

The core maintainers of crunch are:
- Ryan Carney (github: arecarn)
- Marcelo Montu (github: mMontu)

Sources inspiration and credits for this plugin

- http://patorjk.com/
  ASCII font courtesy of Patrick Gillespie

- https://github.com/gregsexton/VimCalc
  Greg Sexton Wrote  Vimcalc

- http://vimrc-dissection.blogspot.com/2011/01/vim-inline-calculator-revisited.html
  Ihar Filipau inspired variable code, in his inline calculator
  calculator

- https://github.com/hrsh7th/vim-neco-calc
  hrsh7th wrote Neco-calc, and inspired the int to float conversion method

==============================================================================
9. LICENSE                                                  *crunch-licenece*
                 DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
                            Version 2, December 2004

                Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>

       Everyone is permitted to copy and distribute verbatim or modified
      copies of this license document, and changing it is allowed as long
                            as the name is changed.

                  DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
        TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

                    0. You just DO WHAT THE FUCK YOU WANT TO

vim:tw=78:ts=8:ft=help:norl:fdm=manual:
